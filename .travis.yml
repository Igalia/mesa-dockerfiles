sudo: false
os: linux
language: c

cache:
  ccache: true

services:
  - docker

env:
  global:
    - MAKEFLAGS="-j4"

before_script:
  - wget https://github.com/grammarly/rocker/releases/download/1.3.1/rocker-1.3.1-linux_amd64.tar.gz
  - tar xvf rocker-1.3.1-linux_amd64.tar.gz
  - rm rocker-1.3.1-linux_amd64.tar.gz
  - mkdir -p -m777 ~/.ccache

after_success:
  - if [[ -n "$DOCKER_USERNAME" && "$TRAVIS_BRANCH" == "master" ]]; then
      docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
      docker push ${DOCKER_IMAGE:-igalia/mesa}:${LLVM:+llvm-}${LLVM:-base};
    fi

script:
  - ./rocker build -f Rockerfile.llvm --var LLVM=$LLVM

jobs:
  include:
    - stage: Validate
      install: npm install -g dockerlint@0.3.1
      script:
        - ./rocker build -f Rockerfile.base --print > Dockerfile
        - dockerlint Dockerfile
        - ./rocker build -f Rockerfile.llvm --var LLVM=3.9 --print > Dockerfile
        - dockerlint Dockerfile
        - ./rocker build -f Rockerfile.megaglest --var RELEASE=master --print > Dockerfile
        - dockerlint Dockerfile
        - ./rocker build -f Rockerfile.mesa --var BUILD=autotools --print > Dockerfile
        - dockerlint Dockerfile
        - ./rocker build -f Rockerfile.piglit --var RELEASE=master --print > Dockerfile
        - dockerlint Dockerfile
        - ./rocker build -f Rockerfile.shader-db --var RELEASE=master --var VIDEO_GID=1000 --print > Dockerfile
        - dockerlint Dockerfile
        - ./rocker build -f Rockerfile.vk-gl-cts --var RELEASE=master --var VIDEO_GID=1000 --print > Dockerfile
        - dockerlint Dockerfile
      after_success: skip

    - stage: Build Base
      script:
        - ./rocker build -f Rockerfile.base --var USE_TXC_DXTN=${USE_TXC_DXTN:-no}

    - stage: Build LLVM
      env: LLVM=3.3
    - env: LLVM=3.6
    - env: LLVM=3.8
    - env: LLVM=3.9
    - env: LLVM=4.0
    - env: LLVM=5.0
    - env: LLVM=6.0


